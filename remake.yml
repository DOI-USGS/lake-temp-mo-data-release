packages:
  - tidyverse
  - meddle # at least v0.0.12
  - purrr
  - scipiper
  - stringr
  - readr
  - sbtools
  - sf
  - tools
  - zip # for zip function

sources:
  - src/sb_utils.R
  - src/file_utils.R

targets:
  all:
    depends:
      - log/sb_posted_files.csv


  sf_spatial_data:
    command: st_read('in_data/study_lakes.shp')
    depends:
      - in_data/study_lakes.dbf
      - in_data/study_lakes.prj
      - in_data/study_lakes.shx
  
  # Need to run `sf_use_s2(FALSE)` to get this to work (https://github.com/r-spatial/sf/issues/1762)
  spatial_metadata:
    command: extract_feature(sf_spatial_data)
    
  # convert crosswalk  
  out_data/mo_nhdhr_xwalk.csv:
    command: rds_to_csv(in_file = "in_data/univ_mo_nhdhr_xwalk.rds", 
      out_file = target_name)
  
  # zip study lakes
  out_data/study_lakes.zip:
    command: sf_to_zip(zip_filename = target_name, 
      sf_object = sf_spatial_data, layer_name = I('study_lakes'))
      
  # list and zip MET drivers
  met_data_files:
    command: list.files('in_data/NLDAS_GLM_csvs', full.names = TRUE)
    
  out_data/NLDAS_GLM_csv.zip:
    command: zip(zipfile = target_name, files = met_data_files, mode = I('cherry-pick'))    

  # Temperature observations - list, convert, and zip
  temp_obs_rds:
    command: find_temp_obs(dir_in = I('in_data'))
  
  temp_obs_csv:
    command: convert_file_to_csv(dir_in = 'in_data/field_data_all', dir_out = I('in_data/00_files_to_zip/temperature_obs'))
  
  out_data/temperature_obs.zip:
    command: zip(zipfile = target_name, files = temp_obs_csv, mode = I('cherry-pick'))
    
  # GLM, uncalibrated nml files - list, rename, and zip
  GLM_uncal_nml_files:
    command: rename_nml_files(dir_in = 'in_data/2_run/out', dir_out = I('in_data/00_files_to_zip/GLM_uncal_nml_files'), cal_nml = I(FALSE))

  out_data/GLM_uncal_nml.zip:
    command: zip(zipfile = target_name, files = GLM_uncal_nml_files, mode = I('cherry-pick'))  
    
  # GLM, calibrated nml files - list, rename, and zip
  GLM_cal_nml_files:
    command: rename_nml_files(dir_in = 'in_data/3_calibrate/out/all', dir_out = I('in_data/00_files_to_zip/GLM_cal_nml_files'), cal_nml = I(TRUE))

  out_data/GLM_cal_nml.zip:
    command: zip(zipfile = target_name, files = GLM_cal_nml_files, mode = I('cherry-pick'))
 
  # uncalibrated temperature profiles - convert file formats and zip
  GLM_uncal_profile_files:
    command: convert_file_to_csv(dir_in = 'in_data/4_extract/out/uncalibrated', dir_out = I('in_data/00_files_to_zip/GLM_uncal_profile_results'))
    
  out_data/GLM_uncal_profile_results.zip:
    command: zip(zipfile = target_name, files = GLM_uncal_profile_files, mode = I('cherry-pick'))
    
  # calibrated temperature profiles - convert file formats and zip
  cal_profile_files:
    command: convert_file_to_csv(dir_in = 'in_data/4_extract/out/calibrated/all', dir_out = I('in_data/00_files_to_zip/GLM_cal_profile_results'))
    
  out_data/GLM_cal_profile_results.zip:
    command: zip(zipfile = target_name, files = cal_profile_files, mode = I('cherry-pick'))     
    
  # create metadata xml  
  out_xml/fgdc_metadata.xml:
    command: render(filename = target_name,
      "in_text/text_data_release.yml",
      spatial_metadata)
    
  log/sb_posted_files.csv:
    command: sb_replace_files(filename = target_name,
      sb_id = I('63659da3d34ebe442507d10b'),
      "out_data/mo_nhdhr_xwalk.csv",
      "out_data/study_lakes.zip",
      "out_data/NLDAS_GLM_csv.zip",
      "out_data/temperature_obs.zip",
      "out_data/GLM_uncal_nml.zip",
      "out_data/GLM_cal_nml.zip",
      "out_data/GLM_uncal_profile_results.zip",
      "out_data/GLM_cal_profile_results.zip",
      "out_xml/fgdc_metadata.xml",
      sources = "src/sb_utils.R")

# # -------- SB IDs ----------
# sbid:
#     command: c(I('63659da3d34ebe442507d10b'))
